#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <cstring>
#include <cctype>

// 최대 도서 수
const int MAX_BOOKS = 5; 

// 책 정보를 담는 구조체
struct Books {
    char Title[50];
    char Authors[50];
    char Press[50];
    int Page;
    int Price;
    char borrow[20]; // "available" 또는 "borrowing"
};

// 도서 목록을 저장하는 배열
Books library[MAX_BOOKS] = {
    {"Truth", "John", "Century", 300, 20000, "available"},
    {"Love", "Paul", "Goods", 200, 15000, "available"},
    {"Joy", "James", "Cookie", 250, 18000, "available"},
    {"Thanks", "Mark", "Saejong", 240, 21000, "available"},
    {"God", "Johnson", "Jungjo", 450, 35000, "available"}
};

// 함수 선언
void displayBookList();
void searchBook();
void borrowBook();
void returnBook();
char toLower(char c);

int main() 
{
    int choice;

    do {
        printf("[도서목록] [검색] [대출] [반납] [종료]\n");
        printf("\n");
        printf("메뉴를 선택하세요: ");
        scanf("%d", &choice);
        printf("\n");

        switch (choice) 
        {
        case 1:
            displayBookList();
            break;
        case 2:
            searchBook();
            break;
        case 3:
            borrowBook();
            break;
        case 4:
            returnBook();
            break;
        case 5:
            printf("프로그램을 종료합니다.\n");
            printf("\n");
            break;
        default:
            printf("다시 선택해주세요.\n");
            printf("\n");
        }

    } while (choice != 5);

    return 0;
}

void displayBookList() 
{
    printf("Title\tAuthors\tPress\tPage\tPrice\tBorrow\n");
    printf("--------------------------------------------------\n");
    for (int i = 0; i < MAX_BOOKS; ++i) 
    {
        printf("%s\t%s\t%s\t%d\t%d\t%s\n", library[i].Title, library[i].Authors, library[i].Press,
            library[i].Page, library[i].Price, library[i].borrow);
    }
    printf("--------------------------------------------------\n");
    printf("\n");
}

void searchBook() 
{
    char searchTitle[50];
    printf("검색할 도서를 입력하세요: ");
    scanf("%s", searchTitle);
    printf("\n");

    // 대소문자 구분 없이 검색
    for (int i = 0; i < MAX_BOOKS; ++i) 
    {
        int j;
        for (j = 0; searchTitle[j] && toLower(searchTitle[j]) == toLower(library[i].Title[j]); ++j);
        if (!searchTitle[j]) 
        {
            printf("Title\tAuthors\tPress\tPage\tPrice\tBorrow\n");
            printf("--------------------------------------------------\n");
            printf("%s\t%s\t%s\t%d\t%d\t%s\n", library[i].Title, library[i].Authors, library[i].Press,
                library[i].Page, library[i].Price, library[i].borrow);
            printf("--------------------------------------------------\n");
            printf("\n");
            return;
        }
    }

    printf("해당 도서를 찾을 수 없습니다.\n");
    printf("\n");
}

void borrowBook() 
{
    char borrowTitle[50];
    printf("대출할 도서를 입력하세요: ");
    scanf("%s", borrowTitle);
    printf("\n");

    for (int i = 0; i < MAX_BOOKS; ++i) 
    {
        int j;
        for (j = 0; borrowTitle[j] && toLower(borrowTitle[j]) == toLower(library[i].Title[j]); ++j);
        if (!borrowTitle[j]) 
        {
            if (strcmp(library[i].borrow, "available") == 0) 
            {
                strcpy(library[i].borrow, "borrowing");
                printf("대출 되었습니다.\n");
                printf("\n");
            }
            else 
            {
                printf("대출 중이라 대출 할 수 없습니다.\n");
                printf("\n");
            }
            return;
        }
    }

    printf("해당 도서를 찾을 수 없습니다.\n");
    printf("\n");
}

void returnBook() 
{
    char returnTitle[50];
    printf("반납할 도서를 입력하세요: ");
    scanf("%s", returnTitle);
    printf("\n");

    for (int i = 0; i < MAX_BOOKS; ++i) 
    {
        int j;
        for (j = 0; returnTitle[j] && toLower(returnTitle[j]) == toLower(library[i].Title[j]); ++j);
        if (!returnTitle[j]) 
        {
            if (strcmp(library[i].borrow, "borrowing") == 0) 
            {
                strcpy(library[i].borrow, "available");
                printf("책이 반납 되었습니다.\n");
                printf("\n");
            }
            else 
            {
                printf("대출 되지 않은 책입니다.\n");
                printf("\n");
            }
            return;
        }
    }

    printf("해당 도서를 찾을 수 없습니다.\n");
    printf("\n");
}

char toLower(char c) 
{
    if (c >= 'A' && c <= 'Z') 
    {
        return c + ('a' - 'A');
    }
    return c;
}
